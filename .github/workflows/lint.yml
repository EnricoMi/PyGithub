name: Lint
on:
  push:
    branches:
      - main
      - release-v*
  pull_request:
  merge_group:
permissions: {}

jobs:
  mypy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/mypy

  mypy-fix:
    runs-on: ubuntu-latest
    needs: mypy
    if: always() && needs.mypy.result == 'failure' && github.event_name == 'pull_request'
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/mypy
        continue-on-error: true
      - name: Commit and push changes
        run: |
          # Commit and push changes
          git config --local user.name "${{ github.actor }}"
          git config --local user.email "github-action-${{ github.actor }}@users.noreply.github.com"
          git commit -a -m "Fixing MyPy"
          git push origin HEAD:$GITHUB_HEAD_REF

  pre-commit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/pre-commit
      - name: debug
        run: |
          # Commit and push changes
          env
          cat "$GITHUB_EVENT_PATH"

  pre-commit-fix:
    runs-on: ubuntu-latest
    needs: pre-commit
    if: always() && needs.pre-commit.result == 'failure' && github.event_name == 'pull_request'
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - uses: ./.github/actions/pre-commit
        continue-on-error: true
      - name: Commit and push changes
        run: |
          # Commit and push changes
          git config --local user.name "${{ github.actor }}"
          git config --local user.email "github-action-${{ github.actor }}@users.noreply.github.com"
          git commit -a -m "Fixing pre-compile"
          git push origin HEAD:$GITHUB_HEAD_REF

  docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: "3.8"

      - run: pip install -r requirements/docs.txt
      - run: pip install -e .
      - run: sphinx-build doc build
