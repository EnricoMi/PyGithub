name: Lint
on:
  push:
    branches:
      - main
      - release-v*
  pull_request:
  merge_group:
  workflow_dispatch:
permissions: {}

jobs:
  mypy:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"
      - run: |
          python -m pip install --upgrade pip
          pip install -e .
          pip install -r requirements/types.txt
      - uses: liskin/gh-problem-matcher-wrap@v2
        with:
          action: add
          linters: mypy
      - run: mypy --show-column-numbers github tests
      - name: Commit and push changes
        if: contains(fromJson('["pull_request", "workflow_dispatch"]'), github.event_name) && failure()
        run: |
          # Commit and push changes
          git config --local user.name "${{ github.actor }}"
          git config --local user.email "github-action-${{ github.actor }}@users.noreply.github.com"
          git push origin HEAD:$GITHUB_REF

  pre-commit:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: "3.x"
      # FIXME: pin pre-commit<4 pending PyCQA/docformatter#287
      - name: install pre-commit
        run: python -m pip install 'pre-commit<4'
      - name: show environment
        run: python -m pip freeze --local
      - uses: actions/cache@v4
        with:
          path: ~/.cache/pre-commit
          key: pre-commit-${{ hashFiles('.pre-commit-config.yaml') }}
      - name: run pre-commit
        run: pre-commit run --show-diff-on-failure --color=always --all-files
      - name: Commit and push changes
        if: contains(fromJson('["pull_request", "workflow_dispatch"]'), github.event_name) && failure()
        run: |
          # Commit and push changes
          env
          git config --local user.name "${{ github.actor }}"
          git config --local user.email "github-action-${{ github.actor }}@users.noreply.github.com"
          git push origin HEAD:$GITHUB_REF

  docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: "3.8"

      - run: pip install -r requirements/docs.txt
      - run: pip install -e .
      - run: sphinx-build doc build
